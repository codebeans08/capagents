"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/details/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchPropertyById: function() { return /* binding */ fetchPropertyById; },\n/* harmony export */   getPropertyRequestUrl: function() { return /* binding */ getPropertyRequestUrl; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// Client should call our own API route; no public defaults to upstream secrets\nconst DEFAULT_BASE_URL = \"/api\";\nconst DEFAULT_PROPERTY_ENDPOINT = \"/properties\";\nconst DEFAULT_EXPAND = \"images\";\nfunction getEnv(name) {\n    const value = process.env[name];\n    return value && value.length > 0 ? value : undefined;\n}\nfunction buildApiUrl(propertyId) {\n    const baseUrl = getEnv(\"NEXT_PUBLIC_API_BASE_URL\") || DEFAULT_BASE_URL;\n    const endpoint = getEnv(\"NEXT_PUBLIC_PROPERTY_ENDPOINT\") || DEFAULT_PROPERTY_ENDPOINT;\n    const normalizedBase = baseUrl.endsWith(\"/\") ? baseUrl.slice(0, -1) : baseUrl;\n    const normalizedEndpoint = endpoint.startsWith(\"/\") ? endpoint : \"/\".concat(endpoint);\n    const trimmedEndpoint = normalizedEndpoint.endsWith(\"/\") ? normalizedEndpoint.slice(0, -1) : normalizedEndpoint;\n    const path = \"\".concat(normalizedBase).concat(trimmedEndpoint, \"/\").concat(encodeURIComponent(propertyId));\n    const expand = getEnv(\"NEXT_PUBLIC_PROPERTY_EXPAND\") || DEFAULT_EXPAND;\n    // If absolute base URL, use URL to append params; if relative, return string with query\n    if (/^https?:\\/\\//i.test(normalizedBase)) {\n        const url = new URL(path);\n        if (expand) url.searchParams.set(\"expand\", expand);\n        return url.toString();\n    }\n    return expand ? \"\".concat(path, \"?expand=\").concat(encodeURIComponent(expand)) : path;\n}\nfunction buildHeaders() {\n    const headers = {\n        Accept: \"application/json\"\n    };\n    // No Authorization header from client; server route injects it\n    return headers;\n}\nfunction toStringSafe(value) {\n    if (value === null || value === undefined) return \"\";\n    return String(value);\n}\nfunction toNumberSafe(value) {\n    let fallback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n    const n = Number(value !== null && value !== void 0 ? value : NaN);\n    return Number.isFinite(n) ? n : fallback;\n}\nfunction extractImages(raw) {\n    var _anyRaw_featured_image, _anyRaw_featured_image1;\n    const anyRaw = raw;\n    const urls = [];\n    // Featured image first if available\n    const featured = (anyRaw === null || anyRaw === void 0 ? void 0 : (_anyRaw_featured_image = anyRaw.featured_image) === null || _anyRaw_featured_image === void 0 ? void 0 : _anyRaw_featured_image.image_url) || (anyRaw === null || anyRaw === void 0 ? void 0 : (_anyRaw_featured_image1 = anyRaw.featured_image) === null || _anyRaw_featured_image1 === void 0 ? void 0 : _anyRaw_featured_image1.url);\n    if (typeof featured === \"string\" && featured) urls.push(featured);\n    const imgs = (anyRaw === null || anyRaw === void 0 ? void 0 : anyRaw.images) || (anyRaw === null || anyRaw === void 0 ? void 0 : anyRaw.Images) || (anyRaw === null || anyRaw === void 0 ? void 0 : anyRaw.photos) || (anyRaw === null || anyRaw === void 0 ? void 0 : anyRaw.Photos) || (anyRaw === null || anyRaw === void 0 ? void 0 : anyRaw.gallery) || (anyRaw === null || anyRaw === void 0 ? void 0 : anyRaw.Gallery) || (anyRaw === null || anyRaw === void 0 ? void 0 : anyRaw.imageUrls) || (anyRaw === null || anyRaw === void 0 ? void 0 : anyRaw.image_urls);\n    if (Array.isArray(imgs)) {\n        for (const item of imgs){\n            if (typeof item === \"string\" && item) urls.push(item);\n            else if (item && typeof item === \"object\") {\n                const u = item.image_url || item.url || item.URL || item.src || item.href || item.imageUrl || item.ImageUrl || item.photoUrl;\n                if (typeof u === \"string\" && u) urls.push(u);\n            }\n        }\n    }\n    const image = (anyRaw === null || anyRaw === void 0 ? void 0 : anyRaw.image) || (anyRaw === null || anyRaw === void 0 ? void 0 : anyRaw.Image) || (anyRaw === null || anyRaw === void 0 ? void 0 : anyRaw.coverImage);\n    if (typeof image === \"string\" && image) urls.push(image);\n    if (image && typeof image === \"object\" && (image.url || image.src)) urls.push(image.url || image.src);\n    return Array.from(new Set(urls));\n}\nfunction getFieldCI(obj, key) {\n    if (!obj || typeof obj !== \"object\") return undefined;\n    const lower = key.toLowerCase();\n    for(const k in obj){\n        if (Object.prototype.hasOwnProperty.call(obj, k)) {\n            if (String(k).toLowerCase() === lower) return obj[k];\n        }\n    }\n    return undefined;\n}\nfunction getFirstField(obj, keys) {\n    for (const key of keys){\n        const val = getFieldCI(obj, key);\n        if (val !== undefined && val !== null && val !== \"\") return val;\n    }\n    return undefined;\n}\nfunction mapToPropertyData(raw) {\n    var _anyRaw_suburb, _anyRaw_price_category, _anyRaw_price_category1;\n    const anyRaw = raw;\n    const location = (anyRaw === null || anyRaw === void 0 ? void 0 : anyRaw.location) || {};\n    const suburbObjName = typeof (anyRaw === null || anyRaw === void 0 ? void 0 : anyRaw.suburb) === \"object\" ? anyRaw === null || anyRaw === void 0 ? void 0 : (_anyRaw_suburb = anyRaw.suburb) === null || _anyRaw_suburb === void 0 ? void 0 : _anyRaw_suburb.name : undefined;\n    const priceText = getFirstField(raw, [\n        \"price\",\n        \"rate\"\n    ]) || (anyRaw === null || anyRaw === void 0 ? void 0 : (_anyRaw_price_category = anyRaw.price_category) === null || _anyRaw_price_category === void 0 ? void 0 : _anyRaw_price_category.pricetext) || (anyRaw === null || anyRaw === void 0 ? void 0 : (_anyRaw_price_category1 = anyRaw.price_category) === null || _anyRaw_price_category1 === void 0 ? void 0 : _anyRaw_price_category1.fromtext) || \"\";\n    const idVal = getFirstField(raw, [\n        \"id\",\n        \"code\",\n        \"property_id\",\n        \"propertyId\",\n        \"PropertyID\",\n        \"PropertyCode\",\n        \"property_code\"\n    ]);\n    const nameVal = getFirstField(raw, [\n        \"name\",\n        \"title\",\n        \"PropertyName\",\n        \"property_name\"\n    ]);\n    const addressVal = getFirstField(raw, [\n        \"address\",\n        \"Address\",\n        \"address1\",\n        \"addressLine1\",\n        \"fullAddress\"\n    ]);\n    const suburbVal = suburbObjName || getFirstField(raw, [\n        \"suburb\",\n        \"area\",\n        \"Area\",\n        \"neighborhood\",\n        \"city\"\n    ]);\n    var _ref;\n    const addressText = toStringSafe((_ref = addressVal !== null && addressVal !== void 0 ? addressVal : location === null || location === void 0 ? void 0 : location.address) !== null && _ref !== void 0 ? _ref : \"\");\n    var _getFirstField, _ref1;\n    const lat = toNumberSafe((_ref1 = (_getFirstField = getFirstField(raw, [\n        \"latitude\",\n        \"lat\"\n    ])) !== null && _getFirstField !== void 0 ? _getFirstField : location === null || location === void 0 ? void 0 : location.lat) !== null && _ref1 !== void 0 ? _ref1 : location === null || location === void 0 ? void 0 : location.latitude, 0);\n    var _getFirstField1, _ref2;\n    const lng = toNumberSafe((_ref2 = (_getFirstField1 = getFirstField(raw, [\n        \"longitude\",\n        \"lng\"\n    ])) !== null && _getFirstField1 !== void 0 ? _getFirstField1 : location === null || location === void 0 ? void 0 : location.lng) !== null && _ref2 !== void 0 ? _ref2 : location === null || location === void 0 ? void 0 : location.longitude, 0);\n    var _getFirstField2, _ref3;\n    const mapUrlExisting = toStringSafe((_ref3 = (_getFirstField2 = getFirstField(raw, [\n        \"mapUrl\"\n    ])) !== null && _getFirstField2 !== void 0 ? _getFirstField2 : location === null || location === void 0 ? void 0 : location.mapUrl) !== null && _ref3 !== void 0 ? _ref3 : \"\");\n    const mapUrlFinal = mapUrlExisting || (lat && lng ? \"https://www.google.com/maps?q=\".concat(lat, \",\").concat(lng, \"&z=15&output=embed\") : addressText ? \"https://www.google.com/maps?q=\".concat(encodeURIComponent(addressText), \"&z=15&output=embed\") : \"\");\n    var _getFirstField3, _getFirstField4, _getFirstField5, _getFirstField6, _getFirstField7;\n    return {\n        id: toStringSafe(idVal !== null && idVal !== void 0 ? idVal : \"\") || \"UNKNOWN\",\n        name: toStringSafe(nameVal !== null && nameVal !== void 0 ? nameVal : \"Property\"),\n        address: addressText,\n        sleeps: toNumberSafe(getFirstField(raw, [\n            \"sleeps\",\n            \"guests\"\n        ]), 0),\n        bathrooms: toNumberSafe(getFirstField(raw, [\n            \"bathrooms\",\n            \"baths\"\n        ]), 0),\n        bedrooms: toNumberSafe(getFirstField(raw, [\n            \"bedrooms\",\n            \"beds\"\n        ]), 0),\n        suburb: toStringSafe(suburbVal !== null && suburbVal !== void 0 ? suburbVal : \"\"),\n        price: toStringSafe(priceText),\n        propertyType: toStringSafe((_getFirstField3 = getFirstField(raw, [\n            \"propertyType\",\n            \"type\"\n        ])) !== null && _getFirstField3 !== void 0 ? _getFirstField3 : \"\"),\n        size: toStringSafe((_getFirstField4 = getFirstField(raw, [\n            \"size\",\n            \"areaSize\"\n        ])) !== null && _getFirstField4 !== void 0 ? _getFirstField4 : \"\"),\n        yearBuilt: toStringSafe((_getFirstField5 = getFirstField(raw, [\n            \"yearBuilt\",\n            \"year\"\n        ])) !== null && _getFirstField5 !== void 0 ? _getFirstField5 : \"\"),\n        parking: toStringSafe((_getFirstField6 = getFirstField(raw, [\n            \"parking\"\n        ])) !== null && _getFirstField6 !== void 0 ? _getFirstField6 : \"\"),\n        description: toStringSafe((_getFirstField7 = getFirstField(raw, [\n            \"description\",\n            \"details\"\n        ])) !== null && _getFirstField7 !== void 0 ? _getFirstField7 : \"\"),\n        be_aware: (()=>{\n            const beAwareField = getFirstField(raw, [\n                \"be_aware\",\n                \"beAware\",\n                \"important_note\",\n                \"importantNote\"\n            ]);\n            if (Array.isArray(beAwareField)) {\n                return beAwareField.map((item)=>({\n                        title: toStringSafe(item.title || item.name || \"\"),\n                        description: toStringSafe(item.description || item.text || \"\")\n                    }));\n            }\n            return toStringSafe(beAwareField !== null && beAwareField !== void 0 ? beAwareField : \"\");\n        })(),\n        features: Array.isArray(raw === null || raw === void 0 ? void 0 : raw.features) ? raw.features : [],\n        amenities: Array.isArray(raw === null || raw === void 0 ? void 0 : raw.amenities) ? raw.amenities : [],\n        attributes: Array.isArray(raw === null || raw === void 0 ? void 0 : raw.attributes) ? raw.attributes : undefined,\n        images: extractImages(raw),\n        location: {\n            latitude: lat,\n            longitude: lng,\n            mapUrl: mapUrlFinal\n        },\n        contact: {\n            agent: toStringSafe(getFirstField((raw === null || raw === void 0 ? void 0 : raw.contact) || raw, [\n                \"agent\"\n            ])),\n            phone: toStringSafe(getFirstField((raw === null || raw === void 0 ? void 0 : raw.contact) || raw, [\n                \"phone\"\n            ])),\n            email: toStringSafe(getFirstField((raw === null || raw === void 0 ? void 0 : raw.contact) || raw, [\n                \"email\"\n            ])),\n            officeHours: toStringSafe(getFirstField((raw === null || raw === void 0 ? void 0 : raw.contact) || raw, [\n                \"officeHours\"\n            ]))\n        }\n    };\n}\nasync function fetchPropertyById(propertyId) {\n    const url = buildApiUrl(propertyId);\n    const headers = buildHeaders();\n    const res = await fetch(url, {\n        headers,\n        cache: \"no-store\"\n    });\n    if (!res.ok) return null;\n    const data = await res.json();\n    const candidate = (data === null || data === void 0 ? void 0 : data.data) || (data === null || data === void 0 ? void 0 : data.property) || data;\n    return mapToPropertyData(candidate);\n}\n// Expose the fully-resolved request URL for debugging/logging purposes\nfunction getPropertyRequestUrl(propertyId) {\n    return buildApiUrl(propertyId);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});